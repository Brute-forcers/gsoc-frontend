{"version":3,"sources":["components/issue.js","components/previewInfo.js","Api/Api.js","Store.js","components/selectorg.js","pages/organisations.js","App.js","reportWebVitals.js","index.js"],"names":["Issue","setPreview","className","src","alt","onClick","PreviewInfo","api","axios","create","baseURL","Context","createContext","Store","children","useState","Orgs","setOrgs","useEffect","get","then","res","data","Provider","value","SelectOrg","useContext","console","log","map","org","index","type","Organisations","React","preview","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPA2BeA,EAxBD,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAIf,OACE,0BAASC,UAAU,iBAAnB,UACE,qBACEC,IAAI,wBACJC,IAAI,oBACJF,UAAU,QAEZ,wCACA,mBAAGA,UAAU,eAAb,qEAGA,oDACA,wBAAQG,QAfS,WACnBJ,GAAW,IAcT,kBACA,qBAAKC,UAAU,cAAf,SACE,uFCJOI,EAfK,SAAC,GAAoB,IAAlBL,EAAiB,EAAjBA,WAKrB,OACE,sBAAKC,UAAU,cAAf,UACE,yBAASA,UAAU,aAAnB,SACE,4DAEF,wBAAQG,QATS,WACnBJ,GAAW,IAQT,wB,QCVAM,E,OAAMC,EAAMC,OAAO,CACvBC,QAAS,uCCAEC,EAAUC,0BAEVC,EAAQ,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAOA,OANAC,qBAAU,WDEiBX,EAAIY,IAAJ,SCDfC,MAAK,SAACC,GACdJ,EAAQI,EAAIC,WAEb,IAGD,cAACX,EAAQY,SAAT,CAAkBC,MAAO,CAACR,EAAMC,GAAhC,SAA2CH,KCQhCW,EAlBG,WAChB,MAAeC,qBAAWf,GAAnBK,EAAP,oBAEA,OADAW,QAAQC,IAAIZ,GAEV,0BAASd,UAAU,gBAAnB,UACE,yBAAQA,UAAU,WAAlB,UACE,4DACCc,EAAKa,KAAI,SAACC,EAAKC,GAAN,OACR,iCAAqBD,GAARC,SAGjB,wBAAQC,KAAK,SAAS9B,UAAU,UAAhC,wBCYS+B,G,MArBO,WACpB,MAA8BC,IAAMnB,UAAS,GAA7C,mBAAOoB,EAAP,KAAgBlC,EAAhB,KAEA,OACE,mCACGkC,EACC,cAAC,EAAD,CAAalC,WAAYA,IAEzB,sBAAKC,UAAU,eAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,kBAAf,UACE,cAAC,EAAD,CAAOD,WAAYA,IACnB,cAAC,EAAD,CAAOA,WAAYA,IACnB,cAAC,EAAD,CAAOA,WAAYA,cCNhBmC,MAVf,WACE,OACE,qBAAKlC,UAAU,MAAf,SACE,cAAC,EAAD,UACE,cAAC,EAAD,SCKOmC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.36ae5103.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst Issue = ({ setPreview }) => {\n  const clickHandler = () => {\n    setPreview(true);\n  };\n  return (\n    <article className=\"issueContainer\">\n      <img\n        src=\"./static/git-icon.svg\"\n        alt=\"Organization icon\"\n        className=\"svg\"\n      />\n      <h3>#24536</h3>\n      <p className=\"desktop-only\">\n        This is an issue related to this. Please fix the issue.\n      </p>\n      <span>Good first issue</span>\n      <button onClick={clickHandler}>Info</button>\n      <div className=\"mobile-only\">\n        <p>This is an issue related to this. Please fix it.</p>\n      </div>\n    </article>\n  );\n};\n\nexport default Issue;\n","import React from \"react\";\n\nconst PreviewInfo = ({ setPreview }) => {\n  const clickHandler = () => {\n    setPreview(false);\n  };\n\n  return (\n    <div className=\"previewInfo\">\n      <article className=\"previewCon\">\n        <h1>All Info about the issue</h1>\n      </article>\n      <button onClick={clickHandler}>Return</button>\n    </div>\n  );\n};\n\nexport default PreviewInfo;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://gsoc-api.herokuapp.com/api\",\n});\n\nexport const getRepos = (orgName) => api.get(`/orgs/${orgName}`);\nexport const getIssues = (orgName, repoName) =>\n  api.get(`/orgs/${orgName}/${repoName}`);\nexport const getOrgs = () => api.get(`/orgs`);\n","import React, { createContext, useEffect, useState } from \"react\";\nimport { getOrgs } from \"./Api/Api\";\n\nexport const Context = createContext();\n\nexport const Store = ({ children }) => {\n  const [Orgs, setOrgs] = useState([]);\n  useEffect(() => {\n    getOrgs().then((res) => {\n      setOrgs(res.data);\n    });\n  }, []);\n\n  return (\n    <Context.Provider value={[Orgs, setOrgs]}>{children}</Context.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport \"./style.css\";\nimport { Context } from \"../Store\";\n\nconst SelectOrg = () => {\n  const [Orgs] = useContext(Context);\n  console.log(Orgs);\n  return (\n    <article className=\"dropContainer\">\n      <select className=\"dropdown\">\n        <option>Select an Organisation</option>\n        {Orgs.map((org, index) => (\n          <option key={index}>{org}</option>\n        ))}\n      </select>\n      <button type=\"submit\" className=\"dropBtn\">\n        Submit\n      </button>\n    </article>\n  );\n};\n\nexport default SelectOrg;\n","import React from \"react\";\nimport Issue from \"../components/issue\";\nimport PreviewInfo from \"../components/previewInfo\";\nimport SelectOrg from \"../components/selectorg\";\nimport \"./style.css\";\n\nconst Organisations = () => {\n  const [preview, setPreview] = React.useState(false);\n\n  return (\n    <>\n      {preview ? (\n        <PreviewInfo setPreview={setPreview} />\n      ) : (\n        <div className=\"orgContainer\">\n          <SelectOrg />\n          <div className=\"issuesContainer\">\n            <Issue setPreview={setPreview} />\n            <Issue setPreview={setPreview} />\n            <Issue setPreview={setPreview} />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Organisations;\n","import \"./App.css\";\nimport Organisations from \"./pages/organisations\";\nimport { Store } from \"./Store\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Store>\n        <Organisations />\n      </Store>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}