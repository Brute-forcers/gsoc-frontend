{"version":3,"sources":["Api/Api.js","Store.js","components/selectorg.js","components/issue.js","components/previewInfo.js","components/Repos.js","pages/organisations.js","App.js","reportWebVitals.js","index.js"],"names":["api","axios","create","baseURL","getIssuesWithRepos","orgName","get","Context","createContext","Store","children","useState","Orgs","setOrgs","repoName","issues","Issues","setIssues","setOrgName","useEffect","then","res","data","console","log","repoDetails","Provider","value","SelectOrg","useContext","selectedOrg","setSelectedOrg","className","onChange","event","val","target","map","org","index","type","onClick","preventDefault","Issue","issue","setPreview","setWorking","src","alt","number","title","PreviewInfo","detail","Repos","repo","React","preview","issueWorking","setIssueWorking","Organisations","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f0e9d59.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://gsoc-api.herokuapp.com/api\",\n});\n\nexport const getRepos = (orgName) => api.get(`/orgs/${orgName}`);\nexport const getIssues = (orgName, repoName) =>\n  api.get(`/orgs/${orgName}/${repoName}`);\nexport const getOrgs = () => api.get(`/orgs`);\nexport const getIssuesWithRepos = (orgName) =>\n  api.get(`/orgsIssues/${orgName}`);\n","import React, { createContext, useEffect, useState } from \"react\";\nimport { getIssuesWithRepos, getOrgs } from \"./Api/Api\";\n\nexport const Context = createContext();\n\nexport const Store = ({ children }) => {\n  const [Orgs, setOrgs] = useState([]);\n  const [Issues, setIssues] = useState([\n    { repoName: \"checkstyle\", issues: [] },\n  ]);\n  const [orgName, setOrgName] = useState(\"zulip\");\n  useEffect(() => {\n    getOrgs().then((res) => {\n      setOrgs(res.data);\n      console.log(Orgs);\n    });\n    getIssuesWithRepos(\"zulip\").then((res) => {\n      setIssues(res.data.repoDetails);\n      console.log(Issues);\n    });\n    // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    getIssuesWithRepos(orgName).then((res) => {\n      setIssues(res.data.repoDetails);\n      console.log(res.data.repoDetails);\n    });\n  }, [orgName]);\n\n  return (\n    <Context.Provider\n      value={[Orgs, setOrgs, Issues, setIssues, orgName, setOrgName]}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport \"./style.css\";\nimport { Context } from \"../Store\";\n\nconst SelectOrg = () => {\n  const [Orgs] = useContext(Context);\n  const [, , , , , setOrgName] = useContext(Context);\n  const [selectedOrg, setSelectedOrg] = useState(\"Select an Organisation\");\n  console.log(Orgs);\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setOrgName(Orgs[selectedOrg - 1]);\n  };\n  const handleChange = (event) => {\n    const val = event.target.value;\n    setSelectedOrg(val);\n    console.log(val);\n  };\n  return (\n    <article className=\"dropContainer\">\n      <select className=\"dropdown\" value={selectedOrg} onChange={handleChange}>\n        <option value={0}>Select an Organisation</option>\n        {Orgs.map((org, index) => (\n          <option value={index + 1} key={index}>\n            {org}\n          </option>\n        ))}\n      </select>\n      <button type=\"submit\" onClick={handleSubmit} className=\"dropBtn\">\n        Submit\n      </button>\n    </article>\n  );\n};\n\nexport default SelectOrg;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Issue = ({ issue, setPreview, setWorking }) => {\n  const clickHandler = () => {\n    setWorking(issue);\n    setPreview(true);\n  };\n  return (\n    <article className=\"issueContainer\">\n      <img\n        src=\"./static/git-icon.svg\"\n        alt=\"Organization icon\"\n        className=\"svg\"\n      />\n      <h3>#{issue.number}</h3>\n      <p className=\"desktop-only\">{issue.title}</p>\n      <span>Good first issue</span>\n      <button onClick={clickHandler}>Info</button>\n      <div className=\"mobile-only\">\n        <p>This is an issue related to this. Please fix it.</p>\n      </div>\n    </article>\n  );\n};\n\nexport default Issue;\n","import React from \"react\";\n\nconst PreviewInfo = ({ setPreview, detail }) => {\n  const clickHandler = () => {\n    setPreview(false);\n  };\n\n  return (\n    <div className=\"previewInfo\">\n      <article className=\"previewCon\">\n        <div>{detail}</div>\n      </article>\n      <button onClick={clickHandler}>Return</button>\n    </div>\n  );\n};\n\nexport default PreviewInfo;\n","import React, { useState } from \"react\";\nimport \"./style.css\";\nimport Issue from \"./issue\";\nimport PreviewInfo from \"./previewInfo\";\n\nconst Repos = ({ repo }) => {\n  const Issues = repo.issues;\n  const [preview, setPreview] = React.useState(false);\n  const [issueWorking, setIssueWorking] = useState(repo.issues[0]);\n  return (\n    <>\n      {preview ? (\n        <PreviewInfo setPreview={setPreview} detail={issueWorking.title} />\n      ) : (\n        <div className=\"repoContainer\">\n          <h3>{repo.repoName}</h3>\n          <div className=\"issuesContainer\">\n            {Issues.map((issue, index) => {\n              return (\n                <Issue\n                  key={index}\n                  issue={issue}\n                  setPreview={setPreview}\n                  setWorking={setIssueWorking}\n                />\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Repos;\n","import React, { useContext } from \"react\";\nimport SelectOrg from \"../components/selectorg\";\nimport \"./style.css\";\nimport { Context } from \"../Store\";\nimport Repos from \"../components/Repos\";\n\nconst Organisations = () => {\n  const [, , Issues] = useContext(Context);\n  console.log(Issues);\n\n  return (\n    <div className=\"orgContainer\">\n      <SelectOrg />\n      {Issues.map((repo, index) => {\n        return <Repos repo={repo} key={index} />;\n      })}\n    </div>\n  );\n};\n\nexport default Organisations;\n","import \"./App.css\";\nimport Organisations from \"./pages/organisations\";\nimport { Store } from \"./Store\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Store>\n        <Organisations />\n      </Store>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}